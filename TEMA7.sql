--1
CREATE OR REPLACE TRIGGER trig_ex1_fna 
  BEFORE DELETE ON emp_fna 
 BEGIN 
  IF USER <> UPPER('scott') THEN 
     RAISE_APPLICATION_ERROR(-20900,'Nu aveti voie sa stergeti!'); 
  END IF; 
 END; 
/ 
DELETE FROM EMP_FNA
WHERE EMP_FNA.SALARY = 2000;
DROP TRIGGER trig_ex1_fna;

--2
CREATE OR REPLACE TRIGGER trig_ex2_fna
  BEFORE UPDATE OF COMMISSION_PCT ON EMP_FNA
 FOR EACH ROW 
 BEGIN 
 IF (:NEW.COMMISSION_PCT > 0.5) THEN
  RAISE_APPLICATION_ERROR(-20001,'Acest comision depaseste 50% din salariu'); 
 END IF;
END;
/

UPDATE EMP_FNA
SET COMMISSION_PCT = 0.6
WHERE EMPLOYEE_ID = 115;

DROP TRIGGER trig_ex2_fna;

--3.a
ALTER TABLE INFO_DEPT_FNA
ADD NUMAR NUMBER(3);

UPDATE INFO_DEPT_FNA
SET NUMAR = (SELECT COUNT(id) FROM INFO_EMP_FNA WHERE INFO_DEPT_FNA.ID = INFO_EMP_FNA.ID_DEPT);

--3.b
CREATE OR REPLACE TRIGGER trig_ex3_fna
 AFTER INSERT OR UPDATE OR DELETE ON INFO_EMP_FNA
 FOR EACH ROW
 BEGIN
 IF INSERTING THEN
  UPDATE INFO_DEPT_FNA
  SET NUMAR = NUMAR + 1
  WHERE id = :NEW.id_dept;
 END IF;

  IF UPDATING THEN
  UPDATE INFO_DEPT_FNA
  SET NUMAR = NUMAR - 1
  WHERE id = :OLD.id_dept;

  UPDATE INFO_DEPT_FNA
  SET numar = numar + 1
  WHERE id = :NEW.id_dept;
  END IF;

 IF DELETING THEN
  UPDATE INFO_DEPT_FNA
  SET NUMAR = NUMAR - 1
  WHERE id = :OLD.ID_DEPT;
 END IF;
END;
/

DROP TRIGGER trig_ex3_fna;
--4
CREATE OR REPLACE TRIGGER trig_ex4_fna
 BEFORE INSERT OR UPDATE ON EMP_FNA
 FOR EACH ROW
 DECLARE
 numar NUMBER(3);

 BEGIN
 SELECT COUNT(*)
 INTO numar
 FROM EMP_FNA
 WHERE DEPARTMENT_ID = :NEW.DEPARTMENT_ID;

 IF numar > 45 THEN
  RAISE_APPLICATION_ERROR(-20001,'Nu pot lucra mai mult de 45 de angajati intr-un departament');
 
END IF;
END; 
/

DROP TRIGGER trig_ex4_fna






